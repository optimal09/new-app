name: Docker Image CI & Push to DockerHub

on:
  push:
    branches:
      - main
    paths:
      - '**' # Deploy to test namespace on every push to the main branch
  pull_request:
    branches:
      - master
    paths:
      - '**' # Deploy to uat and prod namespaces on every pull request to the master branch


jobs:

  build_and_push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag optimaltech/my-image-name
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: 'docker.io/optimaltech/my-image-name'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH || true'
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push the Docker image
      run: docker push optimaltech/my-image-name
    - name: Configure Kubernetes CLI
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBECONFIG }}
        context: optimalgtech.co.uk
        method: kubeconfig

    - name: Deploy to all namespaces
      run: |
        namespaces=$(kubectl get namespaces -o jsonpath='{.items[*].metadata.name}')

        for namespace in $namespaces; do
        kubectl apply -f prod-env/ --namespace=prod
        done
        
        for namespace in $namespaces; do
        kubectl apply -f test-env/ --namespace=test
        done
        
        for namespace in $namespaces; do
        kubectl apply -f uat-env/ --namespace=uat
        done
