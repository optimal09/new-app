name: Docker Image CI & Push to DockerHub

on:
  push:
    branches:
      - main
    paths:
      - '**' # Deploy to test namespace on every push to the main branch
  pull_request:
    branches:
      - master
    paths:
      - '**' # Deploy to uat and prod namespaces on every pull request to the master branch


jobs:

  build_and_push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag optimaltech/my-image-name
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: 'docker.io/optimaltech/my-image-name'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH || true'
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push the Docker image
      run: docker push optimaltech/my-image-name
    - name: Pull the Docker image from DockerHub
      run: docker pull optimaltech/my-image-name
    - name: Create output directory and save the image to a file
      run: |
        mkdir output
        docker save optimaltech/my-image-name > output/image.tar
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
    - name: Load the Docker image into Kubernetes
      run: kind load docker-image --name optimalgtech.co.uk output/image.tar
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}

    - name: Configure Kubernetes CLI
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBECONFIG }}
        context: optimalgtech.co.uk
        method: kubeconfig

    - name: Deploy to test namespace
      if: github.ref == 'refs/heads/main'
      run: kubectl apply -f test-env/ --namespace=test 

    - name: Deploy to uat namespace
      if: github.ref == 'refs/heads/master' && github.event.pull_request.head.repo.full_name == github.repository && github.event.action != 'closed'
      run: kubectl apply -f uat-env/ --namespace=uat 

    - name: Deploy to prod namespace
      if: github.ref == 'refs/heads/master' && github.event.pull_request.head.repo.full_name == github.repository && github.event.action == 'closed' && github.event.pull_request.merged == true
      run: kubectl apply -f prod-env/ --namespace=prod 
